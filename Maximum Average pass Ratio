class Solution {
    public double maxAverageRatio(int[][] classes, int extraStudents) {
        int n = classes.length;
        double sum = 0;
        Queue<double[]> pq = new PriorityQueue<>(new Comparator<double[]>() {
            public int compare(double[] a, double[] b) {
                double d1 = ((b[0] + 1) / (b[1] + 1)) - (b[0] / b[1]);
                double d2 = ((a[0] + 1) / (a[1] + 1)) - (a[0] / a[1]);
                if (d1 > d2)
                    return 1;
                else if (d1 < d2)
                    return -1;
                else
                    return 0;
            }
        });
        for (int[] arr : classes) {
            pq.offer(new double[] { arr[0], arr[1] });
        }
        while (extraStudents-- > 0) {
            double[] arr = pq.poll();
            arr[0]++;
            arr[1]++;
            pq.offer(arr);
        }
        while (!pq.isEmpty()) {
            double[] arr = pq.poll();
            sum += arr[0] / arr[1];
        }
        return sum / n;
    }
}
